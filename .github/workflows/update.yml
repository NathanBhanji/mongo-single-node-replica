name: 🔄 Update Stackbrew Library

on:
  schedule:
    - cron: "0 0 * * *" # Run daily at midnight UTC
  workflow_dispatch: # Allow manual triggering

jobs:
  update-library:
    runs-on: ubuntu-latest
    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Install jq
        run: sudo apt-get install -y jq

      - name: 🔧 Install bashbrew
        run: |
          set -euox pipefail
          BASHBREW_ARCH=amd64
          BASHBREW_VERSION=$(curl -sSL https://api.github.com/repos/docker-library/bashbrew/releases/latest | jq -r .tag_name)
          curl -sSL --retry 3 "https://github.com/docker-library/bashbrew/releases/download/${BASHBREW_VERSION}/bashbrew-${BASHBREW_ARCH}" -o bashbrew
          chmod +x bashbrew
          sudo mv bashbrew /usr/local/bin/
          bashbrew --version

      - name: 🚀 Run update script and generate library file
        run: |
          ./update.sh
          ./generate-stackbrew-library.sh > libraryfile

      - name: 🔍 Check for changes and analyze
        id: git-check
        run: |
          if ! git diff --exit-code libraryfile; then
            updated_versions=""
            removed_versions=""
            added_versions=""
            
            # Get all versions from the libraryfile
            all_versions=$(grep "Directory:" libraryfile | awk '{print $2}' | sort -u)
            
            for version in $all_versions; do
              if [ -d "$version" ]; then
                if git diff --quiet HEAD -- "$version"; then
                  : # Version exists but no changes
                else
                  updated_versions="$updated_versions $version"
                fi
              else
                # Check if the directory was completely removed
                if [ -d "$version" ] && [ -z "$(git ls-files "$version")" ]; then
                  removed_versions="$removed_versions $version"
                fi
              fi
            done
            
            # Check for new versions
            for version in */; do
              version=${version%/}
              if ! echo "$all_versions" | grep -q "$version"; then
                if [ -f "$version/Dockerfile" ]; then
                  added_versions="$added_versions $version"
                fi
              fi
            done
            
            # Get all versions from the previous commit
            previous_versions=$(git ls-tree -d --name-only HEAD~1 | grep -v '^\.' | sort)
            
            # Compare with current versions
            for version in $previous_versions; do
              if [ ! -d "$version" ]; then
                removed_versions="$removed_versions $version"
              fi
            done
            
            # Prepare output
            echo "updated_versions=${updated_versions# }" >> $GITHUB_OUTPUT
            echo "removed_versions=${removed_versions# }" >> $GITHUB_OUTPUT
            echo "added_versions=${added_versions# }" >> $GITHUB_OUTPUT
            
            # Prepare summary
            summary=""
            [ -n "$updated_versions" ] && summary="${summary}Updated: $(echo $updated_versions | tr ' ' ',') "
            [ -n "$removed_versions" ] && summary="${summary}Removed: $(echo $removed_versions | tr ' ' ',') "
            [ -n "$added_versions" ] && summary="${summary}Added: $(echo $added_versions | tr ' ' ',') "
            echo "summary=${summary% }" >> $GITHUB_OUTPUT
          fi

      - name: 🚢 Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "Update: ${{ steps.git-check.outputs.updated_versions }} ${{ steps.git-check.outputs.removed_versions }} ${{ steps.git-check.outputs.added_versions }}"
          title: "Update: ${{ steps.git-check.outputs.updated_versions }} ${{ steps.git-check.outputs.removed_versions }} ${{ steps.git-check.outputs.added_versions }}"
          body: |
            This PR updates the stackbrew library file with the following changes:

            ${{ steps.git-check.outputs.updated_versions && format('Updated:
            {0}', steps.git-check.outputs.updated_versions) || '' }}

            ${{ steps.git-check.outputs.removed_versions && format('Removed:
            {0}', steps.git-check.outputs.removed_versions) || '' }}

            ${{ steps.git-check.outputs.added_versions && format('Added:
            {0}', steps.git-check.outputs.added_versions) || '' }}

            Auto-generated by GitHub Actions.
          branch: update-stackbrew-library
          delete-branch: true
